// <auto-generated />
using System;
using Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20240829060146_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Api.Models.Crop", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("CropId");

                    b.ToTable("Crops");
                });

            modelBuilder.Entity("Api.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DateEnd")
                        .HasColumnType("longtext");

                    b.Property<string>("DateStart")
                        .HasColumnType("longtext");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LogId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<int>("VarietalId")
                        .HasColumnType("int");

                    b.Property<string>("Yield")
                        .HasColumnType("longtext");

                    b.HasKey("EventId");

                    b.HasIndex("LogId");

                    b.HasIndex("VarietalId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Api.Models.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedAt")
                        .HasColumnType("longtext");

                    b.Property<string>("Entry")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LogId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Api.Models.Varietal", b =>
                {
                    b.Property<int>("VarietalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CropId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("FertilizeEvery")
                        .HasColumnType("longtext");

                    b.Property<string>("FertilizeNotes")
                        .HasColumnType("longtext");

                    b.Property<string>("FertilizeStart")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("WaterEvery")
                        .HasColumnType("longtext");

                    b.Property<string>("WaterNotes")
                        .HasColumnType("longtext");

                    b.Property<string>("WaterStart")
                        .HasColumnType("longtext");

                    b.Property<int>("WaterTime")
                        .HasColumnType("int");

                    b.HasKey("VarietalId");

                    b.HasIndex("CropId");

                    b.ToTable("Varietals");
                });

            modelBuilder.Entity("Api.Models.Event", b =>
                {
                    b.HasOne("Api.Models.Log", "Log")
                        .WithMany("Events")
                        .HasForeignKey("LogId");

                    b.HasOne("Api.Models.Varietal", "Varietal")
                        .WithMany("Events")
                        .HasForeignKey("VarietalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Log");

                    b.Navigation("Varietal");
                });

            modelBuilder.Entity("Api.Models.Varietal", b =>
                {
                    b.HasOne("Api.Models.Crop", "Crop")
                        .WithMany("Varietals")
                        .HasForeignKey("CropId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Crop");
                });

            modelBuilder.Entity("Api.Models.Crop", b =>
                {
                    b.Navigation("Varietals");
                });

            modelBuilder.Entity("Api.Models.Log", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("Api.Models.Varietal", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
